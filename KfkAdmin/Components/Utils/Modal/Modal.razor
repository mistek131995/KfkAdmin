
<style>
    .modal-dialog{
        z-index: 1500;
    }
</style>

<div class="modal fade @ModalClass" tabindex="-1" style="display: @(IsVisible ? "block" : "none");" aria-hidden="@(IsVisible ? "false" : "true")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Close">Закрыть</button>
                <button type="button" class="btn btn-primary" @onclick="OnConfirm">Сохранить</button>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade @(IsVisible ? "show" : "")"></div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Заголовок";
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private bool IsVisible { get; set; }
    private string ModalClass => IsVisible ? "show d-block" : "";

    public void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
        Hide();
    }

    private async Task OnConfirmClick()
    {
        await OnConfirm.InvokeAsync();
        Hide();
    }
}